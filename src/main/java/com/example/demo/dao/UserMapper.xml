<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="register_data" jdbcType="VARCHAR" property="registerData" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
<!--   &lt;sql id="Example_Where_Clause"&gt;
    &lt;where&gt;
      &lt;foreach collection="oredCriteria" item="criteria" separator="or"&gt;
        &lt;if test="criteria.valid"&gt;
          &lt;trim prefix="(" prefixOverrides="and" suffix=")"&gt;
            &lt;foreach collection="criteria.criteria" item="criterion"&gt;
              &lt;choose&gt;
                &lt;when test="criterion.noValue"&gt;
                  and ${criterion.condition}
                &lt;/when&gt;
                &lt;when test="criterion.singleValue"&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/when&gt;
                &lt;when test="criterion.betweenValue"&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/when&gt;
                &lt;when test="criterion.listValue"&gt;
                  and ${criterion.condition}
                  &lt;foreach close=")" collection="criterion.value" item="listItem" open="(" separator=","&gt;
                    #{listItem}
                  &lt;/foreach&gt;
                &lt;/when&gt;
              &lt;/choose&gt;
            &lt;/foreach&gt;
          &lt;/trim&gt;
        &lt;/if&gt;
      &lt;/foreach&gt;
    &lt;/where&gt;
  &lt;/sql&gt; -->
<!--   &lt;sql id="Update_By_Example_Where_Clause"&gt;
    &lt;where&gt;
      &lt;foreach collection="example.oredCriteria" item="criteria" separator="or"&gt;
        &lt;if test="criteria.valid"&gt;
          &lt;trim prefix="(" prefixOverrides="and" suffix=")"&gt;
            &lt;foreach collection="criteria.criteria" item="criterion"&gt;
              &lt;choose&gt;
                &lt;when test="criterion.noValue"&gt;
                  and ${criterion.condition}
                &lt;/when&gt;
                &lt;when test="criterion.singleValue"&gt;
                  and ${criterion.condition} #{criterion.value}
                &lt;/when&gt;
                &lt;when test="criterion.betweenValue"&gt;
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                &lt;/when&gt;
                &lt;when test="criterion.listValue"&gt;
                  and ${criterion.condition}
                  &lt;foreach close=")" collection="criterion.value" item="listItem" open="(" separator=","&gt;
                    #{listItem}
                  &lt;/foreach&gt;
                &lt;/when&gt;
              &lt;/choose&gt;
            &lt;/foreach&gt;
          &lt;/trim&gt;
        &lt;/if&gt;
      &lt;/foreach&gt;
    &lt;/where&gt;
  &lt;/sql&gt; -->
  <sql id="Base_Column_List">
    id, nickName, password, registerData, username
  </sql>
<!--   &lt;select id="selectByExample" parameterType="com.example.demo.model.UserExample" resultMap="BaseResultMap"&gt;
    select
    &lt;if test="distinct"&gt;
      distinct
    &lt;/if&gt;
    &lt;include refid="Base_Column_List" /&gt;
    from user
    &lt;if test="_parameter != null"&gt;
      &lt;include refid="Example_Where_Clause" /&gt;
    &lt;/if&gt;
    &lt;if test="orderByClause != null"&gt;
      order by ${orderByClause}
    &lt;/if&gt;
  &lt;/select&gt; -->
  <select id="selectByUsername" parameterType="java.lang.String" resultType="com.example.demo.model.User">
    select *
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
<!--   &lt;delete id="deleteByPrimaryKey" parameterType="java.lang.Integer"&gt;
    delete from user
    where id = #{id,jdbcType=INTEGER}
  &lt;/delete&gt; -->
<!--   &lt;delete id="deleteByExample" parameterType="com.example.demo.model.UserExample"&gt;
    delete from user
    &lt;if test="_parameter != null"&gt;
      &lt;include refid="Example_Where_Clause" /&gt;
    &lt;/if&gt;
  &lt;/delete&gt; -->
  <insert id="insert" parameterType="com.example.demo.model.User">
    insert into user (nick_name, password, 
      register_data, username)
    values (#{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{registerData,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR})
  </insert>
<!--   &lt;insert id="insertSelective" parameterType="com.example.demo.model.User"&gt;
    insert into user
    &lt;trim prefix="(" suffix=")" suffixOverrides=","&gt;
      &lt;if test="id != null"&gt;
        id,
      &lt;/if&gt;
      &lt;if test="nickName != null"&gt;
        nick_name,
      &lt;/if&gt;
      &lt;if test="password != null"&gt;
        password,
      &lt;/if&gt;
      &lt;if test="registerData != null"&gt;
        register_data,
      &lt;/if&gt;
      &lt;if test="username != null"&gt;
        username,
      &lt;/if&gt;
    &lt;/trim&gt;
    &lt;trim prefix="values (" suffix=")" suffixOverrides=","&gt;
      &lt;if test="id != null"&gt;
        #{id,jdbcType=INTEGER},
      &lt;/if&gt;
      &lt;if test="nickName != null"&gt;
        #{nickName,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="password != null"&gt;
        #{password,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="registerData != null"&gt;
        #{registerData,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="username != null"&gt;
        #{username,jdbcType=VARCHAR},
      &lt;/if&gt;
    &lt;/trim&gt;
  &lt;/insert&gt; -->
<!--   &lt;select id="countByExample" parameterType="com.example.demo.model.UserExample" resultType="java.lang.Long"&gt;
    select count(*) from user
    &lt;if test="_parameter != null"&gt;
      &lt;include refid="Example_Where_Clause" /&gt;
    &lt;/if&gt;
  &lt;/select&gt; -->
<!--   &lt;update id="updateByExampleSelective" parameterType="map"&gt;
    update user
    &lt;set&gt;
      &lt;if test="record.id != null"&gt;
        id = #{record.id,jdbcType=INTEGER},
      &lt;/if&gt;
      &lt;if test="record.nickName != null"&gt;
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="record.password != null"&gt;
        password = #{record.password,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="record.registerData != null"&gt;
        register_data = #{record.registerData,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="record.username != null"&gt;
        username = #{record.username,jdbcType=VARCHAR},
      &lt;/if&gt;
    &lt;/set&gt;
    &lt;if test="_parameter != null"&gt;
      &lt;include refid="Update_By_Example_Where_Clause" /&gt;
    &lt;/if&gt;
  &lt;/update&gt; -->
<!--   &lt;update id="updateByExample" parameterType="map"&gt;
    update user
    set id = #{record.id,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      register_data = #{record.registerData,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR}
    &lt;if test="_parameter != null"&gt;
      &lt;include refid="Update_By_Example_Where_Clause" /&gt;
    &lt;/if&gt;
  &lt;/update&gt; -->
<!--   &lt;update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User"&gt;
    update user
    &lt;set&gt;
      &lt;if test="nickName != null"&gt;
        nick_name = #{nickName,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="password != null"&gt;
        password = #{password,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="registerData != null"&gt;
        register_data = #{registerData,jdbcType=VARCHAR},
      &lt;/if&gt;
      &lt;if test="username != null"&gt;
        username = #{username,jdbcType=VARCHAR},
      &lt;/if&gt;
    &lt;/set&gt;
    where id = #{id,jdbcType=INTEGER}
  &lt;/update&gt; -->
<!--   &lt;update id="updateByPrimaryKey" parameterType="com.example.demo.model.User"&gt;
    update user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      register_data = #{registerData,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  &lt;/update&gt; -->
</mapper>